1. How did viewing a diff between two versions of a file help you see the bug that was introduced?
	It straight away pointed me to the change I may have wrongly introduced wrongly during the change

2. How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
	You could know always what changes you made, and judge as to why you made that change

3. What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
	You can decide when to commit, make a logical sense out of each commit when looking back

4. Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
	Git helps to track projects, and since files are more likely to be linked in projects, this feature makes more sense in Git rather than Google Docs

5. How can you use the commands git log and git diff to view the history of files?
	git log gives commit ID's and logic-related commit-time messages, if entered. git diff can be used to see changes difs bw 2 commits

6. How might using version control make you more confident to make changes that could break something?
	because you can always revert to the previous versions

6. Now that you have your workspace set up, what do you want to try using Git for?
	for all dev work
